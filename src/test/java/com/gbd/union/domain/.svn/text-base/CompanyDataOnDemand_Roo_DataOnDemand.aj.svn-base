// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.gbd.union.domain;

import com.gbd.union.domain.Company;
import com.gbd.union.domain.PersonDataOnDemand;
import java.util.List;
import java.util.Random;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect CompanyDataOnDemand_Roo_DataOnDemand {
    
    declare @type: CompanyDataOnDemand: @Component;
    
    private Random CompanyDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Company> CompanyDataOnDemand.data;
    
    @Autowired
    private PersonDataOnDemand CompanyDataOnDemand.personDataOnDemand;
    
    public Company CompanyDataOnDemand.getNewTransientCompany(int index) {
        com.gbd.union.domain.Company obj = new com.gbd.union.domain.Company();
        java.lang.String address = "address_" + index;
        if (address.length() > 100) {
            address  = address.substring(0, 100);
        }
        obj.setAddress(address);
        java.lang.String bankAddress = "bankAddress_" + index;
        if (bankAddress.length() > 50) {
            bankAddress  = bankAddress.substring(0, 50);
        }
        obj.setBankAddress(bankAddress);
        java.lang.String bankName = "bankName_" + index;
        if (bankName.length() > 30) {
            bankName  = bankName.substring(0, 30);
        }
        obj.setBankName(bankName);
        java.lang.String bankNumber = "bankNumber_" + index;
        if (bankNumber.length() > 20) {
            bankNumber  = bankNumber.substring(0, 20);
        }
        obj.setBankNumber(bankNumber);
        java.lang.String bankUserName = "bankUs_" + index;
        if (bankUserName.length() > 8) {
            bankUserName  = bankUserName.substring(0, 8);
        }
        obj.setBankUserName(bankUserName);
        obj.setCompanyType(com.gbd.union.reference.CompanyType.class.getEnumConstants()[0]);
        java.lang.String name = "name_" + index;
        if (name.length() > 30) {
            name  = name.substring(0, 30);
        }
        obj.setName(name);
        obj.setPerson(personDataOnDemand.getRandomPerson());
        return obj;
    }
    
    public Company CompanyDataOnDemand.getSpecificCompany(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Company obj = data.get(index);
        return Company.findCompany(obj.getId());
    }
    
    public Company CompanyDataOnDemand.getRandomCompany() {
        init();
        Company obj = data.get(rnd.nextInt(data.size()));
        return Company.findCompany(obj.getId());
    }
    
    public boolean CompanyDataOnDemand.modifyCompany(Company obj) {
        return false;
    }
    
    public void CompanyDataOnDemand.init() {
        data = com.gbd.union.domain.Company.findCompanyEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Company' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<com.gbd.union.domain.Company>();
        for (int i = 0; i < 10; i++) {
            com.gbd.union.domain.Company obj = getNewTransientCompany(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
