// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.gbd.union.domain;

import com.gbd.union.domain.Res;
import java.util.List;
import java.util.Random;
import org.springframework.stereotype.Component;

privileged aspect ResDataOnDemand_Roo_DataOnDemand {
    
    declare @type: ResDataOnDemand: @Component;
    
    private Random ResDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Res> ResDataOnDemand.data;
    
    public Res ResDataOnDemand.getNewTransientRes(int index) {
        com.gbd.union.domain.Res obj = new com.gbd.union.domain.Res();
        java.lang.String descn = "descn_" + index;
        if (descn.length() > 200) {
            descn  = descn.substring(0, 200);
        }
        obj.setDescn(descn);
        java.lang.String name = "name_" + index;
        if (name.length() > 20) {
            name  = name.substring(0, 20);
        }
        obj.setName(name);
        obj.setPriority(new Integer(index));
        java.lang.String res_string = "res_string_" + index;
        if (res_string.length() > 200) {
            res_string  = res_string.substring(0, 200);
        }
        obj.setRes_string(res_string);
        java.lang.String res_type = "res_type_" + index;
        if (res_type.length() > 20) {
            res_type  = res_type.substring(0, 20);
        }
        obj.setRes_type(res_type);
        return obj;
    }
    
    public Res ResDataOnDemand.getSpecificRes(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Res obj = data.get(index);
        return Res.findRes(obj.getId());
    }
    
    public Res ResDataOnDemand.getRandomRes() {
        init();
        Res obj = data.get(rnd.nextInt(data.size()));
        return Res.findRes(obj.getId());
    }
    
    public boolean ResDataOnDemand.modifyRes(Res obj) {
        return false;
    }
    
    public void ResDataOnDemand.init() {
        data = com.gbd.union.domain.Res.findResEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Res' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<com.gbd.union.domain.Res>();
        for (int i = 0; i < 10; i++) {
            com.gbd.union.domain.Res obj = getNewTransientRes(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
